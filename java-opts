# Run this with "source java-opts"

#JAVA_OPTS="$JAVA_OPTS -Djava.security.manager=net.sourceforge.prograde.sm.PolicyFileGeneratorJSM"
#JAVA_OPTS="$JAVA_OPTS -Djava.security.policy==/dev/null"
#JAVA_OPTS="$JAVA_OPTS -Dprograde.generated.policy=prograde.policy"

#JAVA_OPTS="$JAVA_OPTS -Djava.security.manager=net.sourceforge.prograde.sm.ProGradeJSM"
#JAVA_OPTS="$JAVA_OPTS -Djava.security.policy==strict.policy"

# Turn on HTTPS, turn off HTTP.
# This should be https://example.com:9443
JAVA_OPTS="$JAVA_OPTS -Dhttp.port=disabled"
JAVA_OPTS="$JAVA_OPTS -Dhttps.port=9443"

# Note that using the HTTPS port by itself doesn't set rh.secure=true.
# rh.secure will only return true if the "X-Forwarded-Proto" header is set, and
# if the value in that header is "https", if either the local address is 127.0.0.1, or if
# trustxforwarded is configured to be true in the application configuration file.

# Define the SSLEngineProvider in our own class.
JAVA_OPTS="$JAVA_OPTS -Dplay.http.sslengineprovider=https.CustomSSLEngineProvider"

# Enable this if you want to turn on client authentication
#JAVA_OPTS="$JVM_OPTIONS -Dplay.ssl.needClientAuth=true"

# Enable the handshake parameter to be extended for better protection.
# http://docs.oracle.com/javase/8/docs/technotes/guides/security/jsse/JSSERefGuide.html#customizing_dh_keys
# Only relevant for "DHE_RSA", "DHE_DSS", "DH_ANON" algorithms, in ServerHandshaker.java.
JAVA_OPTS="$JAVA_OPTS -Djdk.tls.ephemeralDHKeySize=2048"

# Don't allow client to dictate terms - this can also be used for DoS attacks.
# Undocumented, defined in sun.security.ssl.Handshaker.java:205
JAVA_OPTS="$JAVA_OPTS -Djdk.tls.rejectClientInitiatedRenegotiation=true"

# Add more details to the disabled algorithms list
# http://docs.oracle.com/javase/8/docs/technotes/guides/security/jsse/JSSERefGuide.html#DisabledAlgorithms
# and http://bugs.java.com/bugdatabase/view_bug.do?bug_id=7133344
JAVA_OPTS="$JAVA_OPTS -Djava.security.properties=disabledAlgorithms.properties"

# Fix a version number problem in SSLv3 and TLS version 1.0.
# http://docs.oracle.com/javase/7/docs/technotes/guides/security/SunProviders.html
JAVA_OPTS="$JAVA_OPTS -Dcom.sun.net.ssl.rsaPreMasterSecretFix=true"

# Tighten the TLS negotiation issue.
# http://docs.oracle.com/javase/8/docs/technotes/guides/security/jsse/JSSERefGuide.html#descPhase2
# Defined in JDK 1.8 sun.security.ssl.Handshaker.java:194
JAVA_OPTS="$JAVA_OPTS -Dsun.security.ssl.allowUnsafeRenegotiation=false"
JAVA_OPTS="$JAVA_OPTS -Dsun.security.ssl.allowLegacyHelloMessages=false"

# Enable this if you need to use OCSP or CRL
# http://docs.oracle.com/javase/8/docs/technotes/guides/security/certpath/CertPathProgGuide.html#AppC
#JAVA_OPTS="$JVM_OPTIONS -Dcom.sun.security.enableCRLDP=true"
#JAVA_OPTS="$JVM_OPTIONS -Dcom.sun.net.ssl.checkRevocation=true"

# Enable this if you need TLS debugging
# http://docs.oracle.com/javase/8/docs/technotes/guides/security/jsse/JSSERefGuide.html#Debug
#JAVA_OPTS="$JVM_OPTIONS -Djavax.net.debug=ssl:handshake"

# Change this if you need X.509 certificate debugging
# http://docs.oracle.com/javase/8/docs/technotes/guides/security/troubleshooting-security.html
#JAVA_OPTS="$JVM_OPTIONS -Djava.security.debug=certpath:x509:ocsp"

# export
export JAVA_OPTS

# Export the keystore password for use in ws.conf
export KEY_PASSWORD=`cat certs/password`
